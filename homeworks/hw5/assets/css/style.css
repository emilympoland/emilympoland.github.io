.lato-thin {
    font-family: "Lato", sans-serif;
    font-weight: 100;
    font-style: normal;
  }
  
  .lato-thin-italic {
    font-family: "Lato", sans-serif;
    font-weight: 100;
    font-style: italic;
  }
  
  .lato-light {
    font-family: "Lato", sans-serif;
    font-weight: 300;
    font-style: normal;
  }
  
  .lato-light-italic {
    font-family: "Lato", sans-serif;
    font-weight: 300;
    font-style: italic;
  }
  
  .lato-regular {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-style: normal;
  }
  
  .lato-regular-italic {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-style: italic;
  }
  
  .lato-bold {
    font-family: "Lato", sans-serif;
    font-weight: 700;
    font-style: normal;
  }
  
  .lato-bold-italic {
    font-family: "Lato", sans-serif;
    font-weight: 700;
    font-style: italic;
  }
  
  .lato-black {
    font-family: "Lato", sans-serif;
    font-weight: 900;
    font-style: normal;
  }
  
  .lato-black-italic {
    font-family: "Lato", sans-serif;
    font-weight: 900;
    font-style: italic;
  }
  
.nav{
    /* [Problem 1] 
        FIXME: Set the width of the nav class to 85px. */
    width: 85px;

}
.nav--button{
    /*  [Problem 2]
        FIXME: Initialize flexbox vertically. Align the text and icons so that they
        are center aligned. */
    display: flex;
    flex-direction: column; /* Align items vertically */
    justify-content: center; /* Center items vertically */
    align-items: center; /* Center items horizontally */
    text-align: center; /* Center text horizontally */

}
.dashboard{
    /*  [Problem 3]
        FIXME: Add some breathing room! The dashboard portion is a bit tight! 
        (Hint: use padding!) */
    padding: 20px;

}
.dashboard--title{
    /*  [Problem 4]
        FIXME: Use flex to add the correct spacing between the "Dashboard" text and
        the three dot button icon that you added previously. Align them to the 
        center of each item. */
        text-align: center;

}
.dashboard--classes{
    /*  [Problem 5]
        FIXME: Use flexbox to make the classes tabs wrap in a 3x2 setup.
        Use flexbox to create equal spacing between each box. */
    display: flex;
    flex-wrap: wrap; /* Allow tabs to wrap to the next line */
    justify-content: space-between; /* Create equal spacing between tabs */
    width: calc(33.33% - 10px); /* 3 columns with equal spacing between each box */
    margin-bottom: 10px; /* Adjust as needed for vertical spacing between rows */

}
.dashboard--classes__box{
    /*  [Problem 6]
        FIXME: Set the widths of each class tab to be 31.5% of the width;

        [Problem 7]
        FIXME: Add 35px to the space under each box. (Choose carefully!) */
        width: 31.5%;
        margin-bottom: 35px;

        
}
/*  [Problem 8]
    FIXME: when the dashboard--classes__box class is hovered over, add a
	darker shadow around the edges of the class tab, just like the real
	bcourses interface. Use this: 0 4px 10px rgba(0,0,0,0.35)

	Write your own class identifier. */
.dashboard--classes__box:hover  {
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.35); /* Add a darker shadow on hover */
}


.dashboard--classes__box__image{
    /*  [Problem 9]
        FIXME: The class tab should have a border-radius of 5px along the top
    	of the boxes. 

    	(Hint: Make sure you only add it to the top left and top
    	right corners. Simply put, the answer is NOT border-radius: 5px.) */
    border-radius: 5px 5px 0 0;

}
/*  [Problem 10]
    FIXME: When h2, h3, and h4 are hovered over, add an underline and
    change the cursor to a pointer. Write the selectors and the styles!

    Write your own class identifier. */
.h2:hover,
.h3:hover,
.h4:hover {
    text-decoration: underline; /* Add underline on hover */
    cursor: pointer; /* Change cursor to a pointer on hover */
}


.notifications__notifs .notifications__notifs--box{
    /*  [Problem 11]
        FIXME: Turn this element into a flex element and use the correct property
        to align the announcement icon and the text box. */
    display: flex; /* Turn the element into a flex container */
    align-items: center; /* Align items vertically (center them) */

        
}